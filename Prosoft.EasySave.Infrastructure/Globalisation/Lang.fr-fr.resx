<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADD_NEW_JOB_CONTEXT" xml:space="preserve">
    <value>Voulez-vous ajouter un travail de sauvegarde supplémentaire?</value>
  </data>
  <data name="BACKUP_NAME" xml:space="preserve">
    <value>Donnez un nom à la sauvegarde:</value>
  </data>
  <data name="DESTINATION" xml:space="preserve">
    <value>Entrez le chemin de destination:</value>
  </data>
  <data name="EXECUTION_TYPE" xml:space="preserve">
    <value>Indiquez le type d'éxécution:</value>
  </data>
  <data name="SOURCE" xml:space="preserve">
    <value>Entrez le chemin du dossier source:</value>
  </data>
  <data name="TRANSFERT_TYPE" xml:space="preserve">
    <value>Indiquez le type de sauvegarde:</value>
  </data>
  <data name="WELCOME_MESSAGE" xml:space="preserve">
    <value>Bienvenue</value>
  </data>
  <data name="SAVE_CONFIG" xml:space="preserve">
    <value>Configuration de la sauvegarde</value>
  </data>
  <data name="SAVE_DEST_PATH" xml:space="preserve">
    <value>Chemin de la destination</value>
  </data>
  <data name="SAVE_NAME" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="SAVE_SOURCE_PATH" xml:space="preserve">
    <value>Chemin de la source</value>
  </data>
  <data name="SAVE_TYPE" xml:space="preserve">
    <value>Type de sauvegarde</value>
  </data>
  <data name="SAVE_USER_INPUT" xml:space="preserve">
    <value>Sélectionnez un type de sauvegarde</value>
  </data>
  <data name="SKIP_USER_INPUT" xml:space="preserve">
    <value>Voulez-vous passer l'étape de configuration manuelle des sauvegardes?</value>
  </data>
  <data name="APP_CONFIG_FILE_WEIGHT" xml:space="preserve">
    <value>Poids maximum d'un fichier</value>
  </data>
  <data name="APP_CONFIG_FILE_WEIGHT_TEXT" xml:space="preserve">
    <value>Si 2 fichiers dépasse cette taille (en kiloOctets), ils seront sauvegardés l'un après l'autre et non pas simultanément.</value>
  </data>
  <data name="APP_CONFIG_LOG" xml:space="preserve">
    <value>Dossier de logs</value>
  </data>
  <data name="APP_CONFIG_LOG_TXT" xml:space="preserve">
    <value>Ce bouton ouvre un explorateur de fichiers vers le dossier qui contient les logs.</value>
  </data>
  <data name="APP_CONFIG_PRIO" xml:space="preserve">
    <value>Séléction de la priorité des fichiers</value>
  </data>
  <data name="APP_CONFIG_PRIO_TXT1" xml:space="preserve">
    <value>Rentrez ci dessous les extensions des fichiers que vous voulez priorisés, séparées par des points virgules</value>
  </data>
  <data name="APP_CONFIG_PRIO_TXT2" xml:space="preserve">
    <value>Extensions possibles: pdf, doc, docx, txt, xls, xlsx, json, iso, jpeg, png</value>
  </data>
  <data name="APP_CONFIG_PRIO_TXT3" xml:space="preserve">
    <value>Exemple: pdf;docx;txt</value>
  </data>
  <data name="APP_CONFIG_SOFT" xml:space="preserve">
    <value>Détection de logiciel métier</value>
  </data>
  <data name="APP_CONFIG_SOFT_BTN" xml:space="preserve">
    <value>Cliquez içi pour sélectionner un fichier</value>
  </data>
  <data name="APP_CONFIG_SOFT_TEXT" xml:space="preserve">
    <value>Sélectionner l'éxécutable du logiciel métier. Lorsqu'il est détécté, toutes les sauvegardes seront stoppées.</value>
  </data>
  <data name="APP_CONFIG_TITLE" xml:space="preserve">
    <value>Paramètres de l'application</value>
  </data>
  <data name="SAVE_COMPLETE" xml:space="preserve">
    <value>Complète</value>
  </data>
  <data name="SAVE_DIFF" xml:space="preserve">
    <value>Différentielle</value>
  </data>
  <data name="SAVE_SELECT_DEST" xml:space="preserve">
    <value>Fichier destination</value>
  </data>
  <data name="SAVE_SELECT_NAME" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="SAVE_SELECT_SOURCE" xml:space="preserve">
    <value>Fichier source</value>
  </data>
  <data name="SAVE_SELECT_TYPE" xml:space="preserve">
    <value>Type de transfert</value>
  </data>
  <data name="SAVIEWS_CRYPT_TIME" xml:space="preserve">
    <value>Temps de chiffrement moyen</value>
  </data>
  <data name="SAVIEWS_NBR_LOG" xml:space="preserve">
    <value>Nombre total de logs</value>
  </data>
  <data name="SAVIEWS_NBR_SAVES" xml:space="preserve">
    <value>Nombre total de sauvegardes</value>
  </data>
  <data name="SAVIEWS_NBR_SAVES_IP" xml:space="preserve">
    <value>Nombre total de sauvegardes en cours</value>
  </data>
  <data name="SAVIEWS_REPO" xml:space="preserve">
    <value>Répertoire le plus utilisé</value>
  </data>
  <data name="SAVIEWS_SAVE_DAY" xml:space="preserve">
    <value>Nombre moyen de sauvegarde journalière </value>
  </data>
  <data name="SAVIEWS_TRANS_TIME" xml:space="preserve">
    <value>Temps de transfert moyen</value>
  </data>
  <data name="SAVE_IN_PROG" xml:space="preserve">
    <value>Sauvegare en cours</value>
  </data>
</root>